import telebot
import sqlite3
import datetime
import time
from telebot import types
import key

bot = telebot.TeleBot(key.tgtoken)


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
welcome_mes = '<b>–ü—Ä–∏–≤–µ—Ç –±—É–¥—É—â–∏–π –º–∏–ª–ª–∏–æ–Ω–µ—Ä</b> üëã\n' \
               '–Ø –ø–æ–∫–∞–∂—É —Ç–µ–±–µ, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –±–∏–∑–Ω–µ—Å —Å –Ω—É–ª—è.\n' \
               '–°–∞–º—ã–º –∞–∫—Ç–∏–≤–Ω—ã–º —è –ø–ª–∞—á—É –¥–µ–Ω—å–≥–∏!\n' \
               '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∏ —Å—Ç–∞–Ω—å —á–∞—Å—Ç—å—é –∏—Å—Ç–æ—Ä–∏–∏!\n\n' \
               '–¢–≤–æ–∏ —Ç—Ä–∏ —à–∞–≥–∞ –∫ —É—Å–ø–µ—Ö—É:\n' \
               '1. <i>–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –∫–∞–Ω–∞–ª</i>\n' \
               '2. <i>–î–µ–ª–∞–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</i>\n' \
               '3. <i>–ü–æ–ª—É—á–∞–π –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ</i>'

# –ë–æ–Ω—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
bonus_mes = '<b>–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!</b> –¢—ã —É–∂–µ –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏!\n\n' \
                '–£ –º–µ–Ω—è –µ—Å—Ç—å –¥–ª—è —Ç–µ–±—è –µ—â–µ –æ–¥–Ω–∞ –∫—Ä—É—Ç–∞—è –Ω–æ–≤–æ—Å—Ç—åüî•\n\n' \
                '–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å —è –≤–µ–¥—É –Ω–∞–±–æ—Ä –≤ —Å–≤–æ–π –∑–∞–∫—Ä—ã—Ç—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª –≥–¥–µ —è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å 1 –∞–≤–≥—É—Å—Ç–∞ –≤ 12:00 –±—É–¥—É –≤—ã—Ö–æ–¥–∏—Ç—å –≤ –ø—Ä—è–º–æ–π —ç—Ñ–∏—Ä –∏ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —è –¥–µ–ª–∞—é —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –º–Ω–æ–≥–æ–º–∏–ª–ª–∏–æ–Ω–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é.\n\n' \
                '<u>–î–æ—Å—Ç—É–ø –∫ –Ω–µ–º—É –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç 31.07.2023–≥ –≤ 23:59.</u>\n\n' \
                '–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω –ø–æ –∑–∞–ø—É—Å–∫—É —É—Å–ø–µ—à–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞, –∞ –∏–º–µ–Ω–Ω–æ: –∫–∞–∫ —Å–æ–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É, –≥–¥–µ –±—Ä–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤, –∫–∞–∫ –∑–∞–∫–ª—é—á–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä–∞, –∫–∞–∫ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å—Å—è, –∫–∞–∫ –≤–Ω–µ–¥—Ä—è—Ç—å —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, –∫–∞–∫ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ –±–∏–∑–Ω–µ—Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã, —Ç–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –æ–ø–ª–∞—á–∏–≤–∞–π –¥–æ—Å—Ç—É–ø —Å–æ —Å–∫–∏–¥–∫–æ–π 70% –≤—Å–µ–≥–æ <s>3200‚ÇΩ</s>=990‚ÇΩ\n\n' \
                '<b>–í–ê–ñ–ù–û!</b>üëá\n' \
                '–°–∫–∏–¥–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç <b>15 –º–∏–Ω—É—Ç</b>.\n' \
                '–î–∞–ª—å—à–µ –¥–æ—Å—Ç—É–ø –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –∑–∞ –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.\n\n' \
                '–£—Å–ø–µ–π –ø–æ–ø–∞—Å—Ç—å –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –º–∏–ª–ª–∏–æ–Ω–µ—Ä–∞ –ø–æ —Ü–µ–Ω–µ –æ–¥–Ω–æ–π –ø–∏—Ü—Ü—ã üçï\n\n' \
                '<i>P.s. —Å—Ä–∞–∑—É –∂–µ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—à–ª–µ–º —Ç–µ–±–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª.</i>\n' \
                '<i>P.s.s. —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª –Ω–µ –±—É–¥–µ—Ç —É–¥–∞–ª—è—Ç—å—Å—è –∏ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —É —Ç–µ–±—è –∫–∞–∫ –ø–æ–ª–Ω—ã–π –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω</i>\n\n' \
                '–í–æ—Ç –∫–Ω–æ–ø–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É, —Å–∫–æ—Ä–µ–µ –æ–ø–ª–∞—á–∏–≤–∞–π, –≤—Ä–µ–º—è —É–∂–µ –∏–¥–µ—Ç üëá'


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏
def db_query(user_id:str, username:str, first_name:str, last_name:str, subpub:bool, subpriv:bool, buy_sub:int, parametr:int):
    try:
        conn = sqlite3.connect('users.db')
        cursor = conn.cursor()
        cursor.execute('''
                CREATE TABLE IF NOT EXISTS users (
                    id INTEGER PRIMARY KEY,
                    username TEXT,
                    first_name TEXT,
                    last_name TEXT,
                    reg_date TEXT,
                    subpub BOOLEAN,
                    subpriv BOOLEAN,
                    buy_sub INTEGER
                )
            ''')
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º id –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("SELECT id FROM users WHERE id=?", (user_id,))
        existing_user = cursor.fetchone()
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø–∞–±–ª–∏–∫
        if existing_user and parametr == 1:
            cursor.execute("UPDATE users SET subpub=? WHERE id=?", (subpub, user_id))
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –±—ã–ª–∞ –∫—É–ø–ª–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞
        elif existing_user and parametr == 2:
            cursor.execute("UPDATE users SET buy_sub=? WHERE id=?", (buy_sub, user_id))
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø—Ä–∏–≤–∞—Ç
        elif existing_user and parametr == 3:
            cursor.execute("UPDATE users SET subpriv=? WHERE id=?", (subpriv, user_id))
        else:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
            current_date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –ø–æ–¥–ø–∏—Å–∫–∏
            cursor.execute('INSERT INTO users (id, username, first_name, last_name, reg_date, subpub, subpriv, buy_sub) VALUES (?, ?, ?, ?, ?, ?, ?, ?)',
                           (user_id, username, first_name, last_name, current_date, subpub, subpriv, buy_sub))

        conn.commit()
    except Exception as e:
        pass
    finally:
        conn.close()


# –ü–æ–∫—É–ø–∫–∞ —á–µ—Ä–µ–∑ –Æ–ö–∞—Å—Å–∞
def buy_sub(message, count:str):
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É
    invoice = telebot.types.InlineKeyboardMarkup()
    item = telebot.types.LabeledPrice(label='–û–ø–ª–∞—Ç–∞', amount=int(count+'00'))  # 100 –∫–æ–ø–µ–µ–∫, —Ç–æ –µ—Å—Ç—å 1 —Ä—É–±–ª—å
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É
    bot.send_invoice(message.chat.id, title='üíé –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø üíé',
                     description='–ü–æ–∫—É–ø–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É\n "–î–µ–ª–∞–µ–º 10 –º–∏–ª–ª–∏–æ–Ω–æ–≤" | –†–µ–∞–ª–∏—Ç–∏ (–±–æ–Ω—É—Å)',
                     provider_token=key.yootoken,
                     currency='RUB', prices=[item], start_parameter='pay_001', invoice_payload=count)


# –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª
def user_invite_subpriv(user_id):
    invite_priv_button = types.InlineKeyboardMarkup(row_width=1)
    invite_priv_button.add(types.InlineKeyboardButton(text='–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª', url=key.url_channel_privat))
    try:
        db_query(user_id, '', '', '', '', True, '', 3)
        bot.send_message(user_id, '–¢–≤–æ–π –¥–æ—Å—Ç—É–ø –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª\nüëáüëáüëá', reply_markup=invite_priv_button)
        return True
    except telebot.apihelper.ApiException as e:
        return False


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
def check_pubsub(check_channel, user_id):
    try:
        chat_member = bot.get_chat_member(check_channel, user_id)
        if chat_member.status == 'member' or chat_member.status == 'administrator':
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ True –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            db_query(user_id, '', '', '', True, '', '', 1)
            return True
    except telebot.apihelper.ApiException:
        pass
    return False


def user_give_bonus(message):
    user_id = message.chat.id
    subpub_button = types.InlineKeyboardMarkup(row_width=1)
    subpub_button.add(types.InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url=key.url_channel_public))
    buy_button = types.InlineKeyboardMarkup(row_width=1)
    buy_button.add(types.InlineKeyboardButton(text='–ó–∞–±—Ä–∞—Ç—å –±–æ–Ω—É—Å', callback_data='user_buy_sub'))
    if check_pubsub(key.id_channel_public, user_id) == False:
        bot.send_message(user_id, '–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª', reply_markup=subpub_button)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    while True:
        user_is_subscribed = check_pubsub(key.id_channel_public, user_id)
        if user_is_subscribed == True:
            bot.send_message(user_id, bonus_mes, parse_mode='html', reply_markup=buy_button)
            break
        time.sleep(5)



def admin_add_user(message):
    pass


#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã start
def command_start(message, user_id):
    # –ó–∞–ø—Ä–æ—Å –∫ –ë–î —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π/–¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db_query(user_id, message.from_user.username, message.from_user.first_name, message.from_user.last_name,
                       False, False, 0, 1)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    bonus_button = types.InlineKeyboardMarkup(row_width=1)
    bonus_button.add(types.InlineKeyboardButton(text='üí∞ –¢–≤–æ–π –±–æ–Ω—É—Å üí∞', callback_data='user_give_bonus'))
    with open('welcome.jpg', 'rb') as photo:
        bot.send_photo(chat_id=user_id, photo=photo, parse_mode='html', caption=welcome_mes, reply_markup=bonus_button)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã admin
def command_admin(message, user_id):
    admin_button = types.InlineKeyboardMarkup(row_width=2)
    admin_button.add(
        types.InlineKeyboardButton(text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', callback_data='admin_view_user'),
        types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≤ –ë–î', callback_data='admin_add_user')
    )
    bot.send_message(user_id, '–ú–µ–Ω—é –∞–¥–º–∏–Ω–∞', reply_markup=admin_button)


def start_bot():
    @bot.message_handler(commands=['start', 'admin'])
    def welcome(message):
        user_id = message.chat.id
        if message.text == '/start':
            command_start(message, user_id)
        elif message.text == '/admin' and user_id in key.admin_id:
            command_admin(message, user_id)

    @bot.callback_query_handler(func=lambda call: True)
    def callback_inline(call):
        if call.data == 'user_buy_sub':
            buy_sub(call.message, '100')
            # if True:
            #     buy_sub(call.message, '990')
            # else:
            #     buy_sub(call.message, '3200')
        if call.data == 'admin_view_user':
            pass
        if call.data == 'admin_add_user':
            admin_add_user(call.message)
        if call.data == 'user_give_bonus':
            user_give_bonus(call.message)

    @bot.pre_checkout_query_handler(func=lambda query: True)
    def checkout(query):
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
        bot.answer_pre_checkout_query(query.id, ok=True)

    @bot.message_handler(content_types=['successful_payment'])
    def successful_payment(message):
        sub_count = int(message.successful_payment.invoice_payload)
        db_query(message.chat.id, '', '', '', '', '', sub_count, 2)
        user_invite_confirm = user_invite_subpriv(message.chat.id)
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
        bot.send_message(key.id_channel_info, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.first_name} {message.from_user.last_name}\n'
                                              f'–ù–∏–∫: @{message.from_user.username}, id: {message.chat.id}\n'
                                              f'–ö—É–ø–∏–ª –ø–æ–¥–ø–∏—Å–∫—É –∑–∞ {sub_count} RUB\n'
                                              f'–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: {user_invite_confirm}')

    bot.polling(none_stop=True)
start_bot()
